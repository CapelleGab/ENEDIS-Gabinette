"""
Module de gestion de l'export Excel pour PMT Analytics.

author : CAPELLE Gabin
"""

import os
import datetime
from tkinter import filedialog, messagebox
from src.utils.excel_writer import sauvegarder_excel


class ExportManager:
    """Gestionnaire de l'export Excel."""
    
    def __init__(self, log_manager):
        self.log_manager = log_manager
    
    def export_to_excel(self, stats_final, moyennes_equipe, csv_file_path, stats_pit=None, moyennes_pit=None):
        """Exporte les r√©sultats vers Excel avec choix du dossier de destination."""
        if stats_final is None or moyennes_equipe is None:
            messagebox.showerror("Erreur", "Aucune donn√©e √† exporter.")
            return False
        
        try:
            # Proposer un nom de fichier par d√©faut bas√© sur la date
            date_str = datetime.datetime.now().strftime("%Y%m%d_%H%M")
            default_filename = f"Statistiques_PMT_{date_str}.xlsx"
            
            # Proposer le dossier Documents par d√©faut (plus s√ªr sur macOS)
            home_dir = os.path.expanduser("~")
            documents_dir = os.path.join(home_dir, "Documents")
            if not os.path.exists(documents_dir):
                documents_dir = home_dir  # Fallback vers le dossier utilisateur
            
            # Ouvrir la bo√Æte de dialogue pour choisir l'emplacement et le nom
            file_path = filedialog.asksaveasfilename(
                title="Enregistrer le fichier Excel",
                defaultextension=".xlsx",
                filetypes=[
                    ("Fichiers Excel", "*.xlsx"),
                    ("Tous les fichiers", "*.*")
                ],
                initialfile=default_filename,
                initialdir=documents_dir
            )
            
            if not file_path:
                # L'utilisateur a annul√©
                return False
            
            # V√©rifier les permissions d'√©criture avant de tenter l'export
            if not self._check_write_permissions(file_path):
                return False
            
            # Si le fichier existe d√©j√†, v√©rifier qu'il n'est pas ouvert
            if not self._check_file_not_locked(file_path):
                return False
            
            # Exporter vers le fichier choisi
            sauvegarder_excel(stats_final, moyennes_equipe, file_path, stats_pit, moyennes_pit)
            
            # Message de succ√®s avec le chemin complet
            content_msg = f"üìä Contenu : {len(stats_final)} employ√©s, {len(moyennes_equipe)} √©quipes"
            if stats_pit is not None and moyennes_pit is not None:
                content_msg += f"\nüìä PIT : {len(stats_pit)} employ√©s, {len(moyennes_pit)} √©quipes"
            
            messagebox.showinfo(
                "Export r√©ussi",
                f"‚úÖ Fichier Excel export√© avec succ√®s !\n\n"
                f"üìÅ Emplacement : {file_path}\n"
                f"{content_msg}"
            )
            
            # Log dans l'interface
            self.log_manager.log_message(f"üíæ Export Excel r√©ussi : {file_path}")
            return True
            
        except PermissionError as e:
            self._handle_permission_error(e)
            return False
            
        except OSError as e:
            self._handle_os_error(e)
            return False
            
        except Exception as e:
            self._handle_general_error(e)
            return False
    
    def _check_write_permissions(self, file_path):
        """V√©rifie les permissions d'√©criture."""
        directory = os.path.dirname(file_path)
        if not os.access(directory, os.W_OK):
            messagebox.showerror(
                "Erreur de permissions", 
                f"‚ùå Impossible d'√©crire dans le r√©pertoire :\n{directory}\n\n"
                "üí° Essayez de sauvegarder dans :\n"
                "‚Ä¢ Votre dossier Documents\n"
                "‚Ä¢ Votre Bureau\n"
                "‚Ä¢ Un dossier o√π vous avez les droits d'√©criture"
            )
            return False
        return True
    
    def _check_file_not_locked(self, file_path):
        """V√©rifie que le fichier n'est pas verrouill√©."""
        if os.path.exists(file_path):
            try:
                # Tenter d'ouvrir le fichier en mode √©criture pour v√©rifier qu'il n'est pas verrouill√©
                with open(file_path, 'a'):
                    pass
            except PermissionError:
                messagebox.showerror(
                    "Fichier verrouill√©", 
                    f"‚ùå Le fichier est ouvert dans une autre application :\n{file_path}\n\n"
                    "üí° Fermez le fichier Excel et r√©essayez, ou choisissez un autre nom."
                )
                return False
        return True
    
    def _handle_permission_error(self, e):
        """G√®re les erreurs de permissions."""
        self.log_manager.log_message(f"‚ùå Erreur de permissions : {str(e)}")
        messagebox.showerror(
            "Erreur de permissions", 
            f"‚ùå Erreur de permissions lors de l'export :\n{str(e)}\n\n"
            "üí° Essayez de sauvegarder dans :\n"
            "‚Ä¢ Votre dossier Documents\n"
            "‚Ä¢ Votre Bureau\n"
            "‚Ä¢ Un dossier o√π vous avez les droits d'√©criture"
        )
    
    def _handle_os_error(self, e):
        """G√®re les erreurs syst√®me."""
        self.log_manager.log_message(f"‚ùå Erreur syst√®me : {str(e)}")
        if e.errno == 30:  # Read-only file system
            messagebox.showerror(
                "Syst√®me de fichiers en lecture seule",
                f"‚ùå Syst√®me de fichiers en lecture seule :\n{str(e)}\n\n"
                "üí° Essayez de sauvegarder dans un autre emplacement."
            )
        else:
            messagebox.showerror("Erreur syst√®me", f"‚ùå Erreur syst√®me lors de l'export :\n{str(e)}")
    
    def _handle_general_error(self, e):
        """G√®re les erreurs g√©n√©rales."""
        self.log_manager.log_message(f"‚ùå Erreur d'export : {str(e)}")
        messagebox.showerror("Erreur d'export", f"‚ùå Erreur lors de l'export :\n{str(e)}") 